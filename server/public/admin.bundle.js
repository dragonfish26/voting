/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/js/admin-vote.js":
/*!*********************************!*\
  !*** ./public/js/admin-vote.js ***!
  \*********************************/
/***/ (() => {

eval("var socket = io();\n\n/*\nsocket.emit(\"adminConnected\");\n\nsocket.on(\"message\", (data) => {\n    console.log(\"Message from server:\", data);\n});\n\nsocket.emit(\"testMessage\", \"Hello from admin!\"); \n}); */\n\nsocket.emit(\"newConnection\");\nvar startVoteBtn = document.getElementById('start-vote-btn');\nvar closeVoteBtn = document.getElementById('close-vote-btn');\nvar voteTextInput = document.getElementById('vote-text');\nvar voteTextSection = document.getElementById('vote-text-section');\nvar currentVoteName = document.getElementById('current-vote-name');\nvar infoList = document.getElementById('info-list');\nvar infoSection = document.getElementById('info-section');\nvar statsSection = document.getElementById('stats-section');\nvar voteStatusSection = document.getElementById('vote-status');\nvar resultSection = document.getElementById('results-section');\nvar voteCountWrapper = document.querySelector('#stats-section p:nth-child(3)');\nvar restartVoteBtn = document.getElementById('restart-vote');\nsocket.on('adminAssigned', function (data) {\n  if (data.message === 'You are now the admin') {\n    voteTextSection.style.display = 'block';\n    closeVoteBtn.style.display = 'none';\n    displayMessage('You are now the admin!');\n  } else {\n    voteTextSection.style.display = 'none';\n    statsSection.style.display = 'none';\n    infoSection.style.display = 'none';\n    voteStatusSection.style.display = 'none';\n\n    // admin already assigned message\n    var adminMessage = document.createElement('h2');\n    adminMessage.textContent = 'An admin is already assigned.';\n    adminMessage.style.textAlign = 'center';\n    adminMessage.style.marginTop = '20px';\n    document.body.appendChild(adminMessage);\n  }\n});\n\n//function to display a message in the info section\nfunction displayMessage(message) {\n  var messageElement = document.createElement('li');\n  messageElement.textContent = message;\n  infoList.appendChild(messageElement);\n}\nstartVoteBtn.addEventListener('click', function () {\n  var voteName = voteTextInput.value.trim();\n  if (voteName) {\n    socket.emit('startVote', voteName);\n    currentVoteName.textContent = voteName;\n    voteTextSection.style.display = 'none';\n    startVoteBtn.style.display = 'none';\n    closeVoteBtn.style.display = 'block';\n    resultSection.style.display = 'block';\n    voteCountWrapper.style.display = 'block';\n    displayMessage(\"Vote started: \".concat(voteName));\n  }\n});\n\n// Handle closing the vote\ncloseVoteBtn.addEventListener('click', function () {\n  socket.emit('closeVote');\n  displayMessage('Vote closed, results are being sent to voters.');\n});\nsocket.on('voteStarted', function (voteName) {\n  currentVoteName.textContent = voteName;\n  displayMessage(\"The vote \\\"\".concat(voteName, \"\\\" is now open.\"));\n});\nsocket.on('voteClosed', function (voteResults) {\n  displayMessage(\"Vote closed. Final results: \".concat(JSON.stringify(voteResults)));\n  closeVoteBtn.style.display = 'none';\n  restartVoteBtn.style.display = 'block';\n});\nrestartVoteBtn.addEventListener('click', function () {\n  voteTextSection.style.display = 'block';\n  startVoteBtn.style.display = 'block';\n  restartVoteBtn.style.display = 'none';\n  resultSection.style.display = 'none';\n  voteCountWrapper.style.display = 'none';\n  voteTextInput.value = '';\n\n  //displayMessage('You can start a new vote.');\n});\n\n// updates on the stats section \nsocket.on('updateStats', function (stats) {\n  document.getElementById('total-voters').textContent = stats.totalVoters;\n  document.getElementById('connected-voters').textContent = stats.connectedVoters;\n  document.getElementById('vote-count').textContent = stats.voteCount;\n});\nvar ctx = document.getElementById('adminChart').getContext('2d');\nvar adminChart = new Chart(ctx, {\n  type: 'bar',\n  data: {\n    labels: ['Pour', 'Contre', 'NPPV', 'Abstention'],\n    datasets: [{\n      label: 'Votes',\n      data: [0, 0, 0, 0],\n      // Initial values\n      backgroundColor: '#DDA15E',\n      borderColor: '#BC6C25',\n      borderWidth: 1\n    }]\n  },\n  options: {\n    indexAxis: 'y',\n    // Makes the chart horizontal\n    scales: {\n      x: {\n        beginAtZero: true,\n        suggestedMax: 10 // Dynamically updated\n      }\n    }\n  }\n});\nsocket.on('voteCast', function (data) {\n  console.log('Received voteCast data:', data);\n  updateChart(data.votes);\n});\nfunction updateChart(voteCounts) {\n  var totalVotes = voteCounts.pour + voteCounts.contre + voteCounts.nppv + voteCounts.abstention;\n\n  // Update chart data\n  adminChart.data.datasets[0].data = [voteCounts.pour, voteCounts.contre, voteCounts.nppv, voteCounts.abstention];\n\n  // Adjust x-axis dynamically\n  adminChart.options.scales.x.suggestedMax = Math.max(10, totalVotes);\n  adminChart.update();\n}\nsocket.on('resetChart', function (data) {\n  console.log('Resetting chart with:', data);\n  updateChart(data);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/js/admin-vote.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/js/admin-vote.js"]();
/******/ 	
/******/ })()
;